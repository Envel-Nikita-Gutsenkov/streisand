{% include "languages.md.j2" %}

WireGuard
---------

[WireGuard](https://www.wireguard.com/) почти наверняка лучший вариант подключения, который предоставляет Стрейзанд. Это связано с его [невероятной производительностью](https://www.wireguard.com/performance/), [лучшей криптографией](https://www.wireguard.com/protocol/), и многими, многими другими преимуществами.

WireGuard поддерживает [кросс-платформенность](https://www.wireguard.com/xplatform/) и доступен почти под все типы платформ.

Так же доступна [экспериментальная конфигурация OpenWrt/LEDE](#openwrt) 17.01.4 (или новее).

---
* Платформы
  * [Windows](#windows)
  * [Android](#android)
  * [iOS](#ios)
  * [Linux](#linux)
  * [macOS](#macos)
  * [OpenWrt](#openwrt)

<a name="windows"></a>
### Windows ###
1. [Установите WireGuard для Windows](https://www.wireguard.com/install/)
1. Загрузите один из файлов конфигурации клиента. **Только одно устройство может использовать профиль одновременно**. В этом примере мы предположим, что вы загрузили {{ vpn_client_names.results[0].stdout }}:
{% for client in vpn_client_names.results %}
   * [{{ client.stdout }}](/wireguard/{{ client.stdout }}.conf)
{% endfor %}
1. Запустите приложение и выберите *Add Tunnel → Import tunnel(s) from file…*, select the downloaded file, then click *Open*.
1. Выберите импортированный туннель и нажмите *Activate* для подключения.
1. Все должно быть отлично! Вы можете убедиться, что ваш трафик направляется правильно [посмотрев свой IP-адрес на DuckDuckGo]({{ streisand_my_ip_url }}). Он должен сказать, что *Your public IP address is {{ streisand_ipv4_address }}*.

---

<a name="android"></a>
### Android ###
1. [Установите WireGuard](https://play.google.com/store/apps/details?id=com.wireguard.android).
1. Запустите приложение и нажмите синюю кнопку "+", чтобы добавить новый туннель.
1. Нажмите *Create from QR code* и предоставьте приложению разрешение на доступ к камере. Появится видоискатель.
1. Используйте камеру для сканирования одного из этих QR-кодов конфигурации клиента. **Только одно устройство может использовать профиль одновременно**:
{% for client in vpn_client_names.results %}
   * [{{ client.stdout }}](/wireguard/{{ client.stdout }}.png)
{% endfor %}
1. Введите имя туннеля и нажмите *Create Tunnel* чтобы сохранить конфигурацию.
1. Нажмите переключатель рядом с именем туннеля, чтобы включить VPN. Если вы впервые используете WireGuard на своем Android устройстве, вам будет предложено принять запрос на подключение VPN.
1. Все должно быть отлично! Вы можете убедиться, что ваш трафик направляется правильно [посмотрев свой IP-адрес на DuckDuckGo]({{ streisand_my_ip_url }}). Он должен сказать, что *Your public IP address is {{ streisand_ipv4_address }}*.
1. По желанию можно добавить в шторку уведомлений android кнопку для быстрого подключения к VPN по необходимости или для постоянного использования.

---

<a name="ios"></a>
### iOS ###
1. Установите WireGuard (разработчик WireGuard Development Team) из App Store.
1. Запустите приложение и нажмите синюю кнопку "+", чтобы добавить новый туннель.
1. Нажмите *Create from QR code* и предоставьте приложению разрешение на доступ к камере. Появится видоискатель.
1. Используйте камеру для сканирования одного из этих QR-кодов конфигурации клиента. **Только одно устройство может использовать профиль одновременно**:
{% for client in vpn_client_names.results %}
   * [{{ client.stdout }}](/wireguard/{{ client.stdout }}.png)
{% endfor %}
1. Введите имя туннеля и нажмите *Create Tunnel* чтобы сохранить конфигурацию.
1. Нажмите переключатель рядом с именем туннеля, чтобы включить VPN. Если вы впервые используете WireGuard на своем iOS устройстве, вам будет предложено принять запрос на подключение VPN.
1. Все должно быть отлично! Вы можете убедиться, что ваш трафик направляется правильно [посмотрев свой IP-адрес на DuckDuckGo]({{ streisand_my_ip_url }}). Он должен сказать, что *Your public IP address is {{ streisand_ipv4_address }}*.

---

<a name="linux"></a>
### Linux ###
1. [Установите WireGuard](https://www.wireguard.com/install/).
1. Загрузите один из файлов конфигурации клиента. **Только одно устройство может использовать профиль одновременно**. В этом примере мы предположим, что вы загрузили {{ vpn_client_names.results[0].stdout }}:
{% for client in vpn_client_names.results %}
   * [{{ client.stdout }}](/wireguard/{{ client.stdout }}.conf)
{% endfor %}
1. Переместите файл конфигурации клиента в правильный каталог:

   `sudo sh -c 'umask 077; mkdir -p /etc/wireguard; cat > /etc/wireguard/{{ vpn_client_names.results[0].stdout }}.conf' < ~/Downloads/{{ vpn_client_names.results[0].stdout }}.conf`

1. (Ubuntu/Debian) Для Ubuntu и Debian подобных систем установите пакет `openresolv`:

   `sudo apt-get install openresolv`

1. Используйте утилиту `wg-quick` для вызова интерфейса WireGuard:

   `sudo wg-quick up {{ vpn_client_names.results[0].stdout }}`

1. Для систем Linux использующих systemd вы также можете включить автозагрузку Wireguard:

   `sudo systemctl enable wg-quick@{{ vpn_client_names.results[0].stdout }}.service`

1. Все должно быть отлично! Вы можете убедиться, что ваш трафик направляется правильно [посмотрев свой IP-адрес на DuckDuckGo]({{ streisand_my_ip_url }}). Он должен сказать, что *Your public IP address is {{ streisand_ipv4_address }}*.
1. Чтобы остановить маршрутизацию вашего трафика через WireGuard:

   `sudo wg-quick down {{ vpn_client_names.results[0].stdout }}`

#### Заметка по конфигурации DNS ####
Каждый профиль конфигурации клиента включает в себя команду DNS, которая использует resolvconf для направления DNS-трафика на сервер dnsmasq, доступный через зашифрованный интерфейс WireGuard по адресу `{{ dnsmasq_wireguard_ip }}`. Хотя resolvconf является обычной утилитой, вам может потребоваться использовать PostUp/PostDown с другой командой для вашего дистрибутива или конкретной конфигурации сети.

---

<a name="macos"></a>
### macOS ###
1. [Установите WireGuard](https://itunes.apple.com/us/app/wireguard/id1451685025) из Mac App Store.
1. Загрузите один из файлов конфигурации клиента. **Только одно устройство может использовать профиль одновременно**. В этом примере мы предположим, что вы загрузили {{ vpn_client_names.results[0].stdout }}:
{% for client in vpn_client_names.results %}
   * [{{ client.stdout }}](/wireguard/{{ client.stdout }}.conf)
{% endfor %}
1. Запустите приложение WireGuard, нажмите кнопку *Import tunnel(s) from file* и выберите файл, загруженный на предыдущем шаге. Если вы впервые используете WireGuard на своем устройстве macOS, вам будет предложено разрешить "WireGuard" добавлять конфигурации VPN.
1. Нажмите *Activate* для включения VPN.
1. Все должно быть отлично! Вы можете убедиться, что ваш трафик направляется правильно [посмотрев свой IP-адрес на DuckDuckGo]({{ streisand_my_ip_url }}). Он должен сказать, что *Your public IP address is {{ streisand_ipv4_address }}*.

---

<a name="openwrt"></a>
### ЭКСПЕРИМЕНТАЛЬНЫЙ: OpenWrt (LEDE) ###

Эти профили доступны для маршрутизаторов, работающих под управлением [OpenWrt](https://openwrt.org/). Для поддержки требуется OpenWrt/LEDE 17.01.4 или новее; OpenWrt Chaos Calmer слишком старый.

OpenWrt Устройства OpenWrt работают под управлением Linux, но управляются ими через централизованную систему конфигурации под названием [UCI](https://openwrt.org/docs/guide-user/base-system/uci). Большинство устройств OpenWrt имеют интерфейс веб-администратора под названием LuCI, который скрывает сложность UCI. Эти профили WireGuard можно установить через оболочку или через веб-интерфейс LuCI.

Эти профили заменят существующее подключение к Интернету. В результате вам следует устанавливать их только при подключении к сетевому интерфейсу Wi-Fi или LAN маршрутизатора. Если вы вошли в систему удаленно, вы можете быть заблокированы.

#### Установка программного обеспечения WireGuard ####

Убедитесь, что установлены следующие программные пакеты: `luci-app-wireguard` and `luci-proto-wireguard`. Чтобы установить эти пакеты из веб-интерфейса:

1. Перейдите на страницу LuCI *System:Software*, и нажмите кнопку *Update lists*.
2. Введите `wireguard` в поле *Find package*.
3. Щелкните вкладку *Available packages (wireguard)*.
4. Щелкните *Install* рядом с `luci-app-wireguard`; вернитесь к шагу 2, чтобы также установить `luci-proto-wireguard`.

(Если вы управляете своим маршрутизатором без пользовательского интерфейса LuCI, вы можете это сделать командой `opkg update; opkg install kmod-wireguard wireguard-tools` .)

#### Установка профиля ####

Опытные пользователи могут установить эти профили из командной строки маршрутизатора SSH; поместите его в файл и запустите как сценарий оболочки (shell script).

Также существует простой способ установки через веб-интерфейс. В LuCI *System:Startup* веб-страница содержит текстовое поле *Local Startup*. Это сценарий оболочки, который запускается каждый раз при загрузке маршрутизатора. Эти профили WireGuard предназначены для вставки в поле *Local Startup* вместо существующего содержимого. (Обязательно удалите все `exit 0` строки.)

При следующей перезагрузке роутера скрипт запустится. Он удаляется автоматически. Щелкните на *Local Startup* для получения результата состояния.

#### Изменения, внесенные профилем ####

* Будет создан новый интерфейс с именем, подобным `poem_walk`.
* Интерфейс добавлен в WAN *WAN* зону сети.
* Маршрут в Интернет по умолчанию настроен на интерфейс. (Это нарушит подключение к WAN, поэтому обязательно устанавливайте только через WiFi / LAN).
* WireGuard keepalive установлен на 25 секунд.
* Общесистемный DNS указывает на сервер Стрейзанд

Если вам не нравится DNS по умолчанию, вы можете изменить поведение DNS на LuCI странице *Network:DHCP and DNS*. Напишите адрес DNS-сервера в *DNS forwardings*. На вкладке *Resolv and Hosts Files* оставьте установленным *Ignore resolve file*, если вы не хотите использовать свой восходящий DNS. (Вероятно, вы этого не сделаете.)

Если вы знаете, что не находитесь за устройством NAT, отредактируйте интерфейс WireGuard, чтобы установить для keepalive значение 0.

#### Профили OpenWrt ####

{% for client in vpn_client_names.results %}
   * [{{ client.stdout }}](/wireguard/{{ client.stdout }}-openwrt.txt)
{% endfor %}
